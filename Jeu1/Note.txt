Position dans la fenètre pour les différents cables

- position a droite de l'écran
pos_1 = (190, 20, 0, 0)
pos_2 = (190, 145, 0, 0)
pos_3 = (190, 270, 0, 0)
pos_4 = (190, 395, 0, 0)
pos_5 = (190, 520, 0, 0)

- position a gauche de l'écran
pos_A = (530, 20, 0, 0)
pos_B = (530, 145, 0, 0)
pos_C = (530, 270, 0, 0)
pos_D = (530, 395, 0, 0)
pos_E = (530, 520, 0, 0)

Sous forme de liste de dictionnaire plus facilement utilisable
positions = [
    {"pos_1": (190, 20, 0, 0)},
    {"pos_2": (190, 145, 0, 0)},
    {"pos_3": (190, 270, 0, 0)},
    {"pos_4": (190, 395, 0, 0)},
    {"pos_5": (190, 520, 0, 0)},
    {"pos_A": (530, 20, 0, 0)},
    {"pos_B": (530, 145, 0, 0)},
    {"pos_C": (530, 270, 0, 0)},
    {"pos_D": (530, 395, 0, 0)},
    {"pos_E": (530, 520, 0, 0)}
]




    {   # Bouton Jeu gagner
        "name" : "Jeu gagner",
        "rect": pygame.Rect(shuffle_output_positions["pos_E"]),  # Taille initiale, sera ajustée à celle de l'image
        "text": "Bravo le cerveau et réparer",  # Texte (vide si image)
        "image_path": "", # Chemin/nom de l'image (vide si texte)
        "scale_factor": 0.1,  # Facteur d'échelle pour le bouton 1
        "is_clicked": False,  # Indique si le bouton est cliqué
        "outline_width": 2,  # Largeur du contour
    },

    # Jeu fini ?
        if len(Rep_give) == len(Liste_reponse):
            # Afficher un message de fin de jeu
            create_button()